/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
  id "com.enonic.xp.app" version "2.0.0"
  id "com.moowork.node" version "1.3.1"
}

allprojects {
  repositories {
    mavenLocal()
    jcenter()
  }

  task cleanNpm(type: Delete) {
    delete 'node_modules'
  }

  /*
  node {
    download = true
    version = '9.7.0'
  }
 */

}

app {
  systemVersion = "${xpVersion}"
}

def ignoreSubprojectDirs = [
        'packages'
]
configure(subprojects.findAll {!ignoreSubprojectDirs.contains(it.name)}) {
  project.ext.PROJDIR = "${project.buildDir.toString()}${File.separator}${File.separator}${File.separator}".replace("${File.separator}build${File.separator}${File.separator}", '')

  npmInstall.inputs.files('package.json', 'package-lock.json')
  npmInstall.outputs.file('package-lock.json')

  task clean(type: Delete) {}

  task compileJS(type: NpmTask) {}
  task buildAll {}
  buildAll.dependsOn += compileJS
  task lint(type: NpmTask) {}
  task testAll(type: NpmTask) {}

  compileJS.dependsOn += npmInstall
  testAll.dependsOn += lint
  testAll.dependsOn += buildAll



  task doPublish(type: NpmTask) {
    args=['publish', '--dry-run']
  }
  doPublish.dependsOn += testAll
  task postPublish {}
  postPublish.dependsOn += clean
  clean.shouldRunAfter doPublish
  postPublish.dependsOn += doPublish
  task publish {}
  publish.dependsOn += postPublish


// Standard
  task makeLink(type: NpmTask) {
    args=['link']
  }
  makeLink.dependsOn += compileJS

}



dependencies {
  include project(":packages:buildconstants")
}


npmInstall.inputs.files('package.json', 'package-lock.json')
npmInstall.outputs.file('package-lock.json')
task npmClean(type: Delete) {
  delete 'node_modules'
}
